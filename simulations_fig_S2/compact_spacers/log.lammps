LAMMPS (21 Nov 2023)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
units nano
boundary p p p
atom_style bond

variable index equal ${index_arg}
variable index equal 1
variable seed equal v_index*100
variable A equal 9.4
variable A_kcal equal v_A*4.14
variable temperature equal 318

read_data Sticker10_Chain10_NP50_Particle50.initial
Reading data file ...
  orthogonal box = (-50 -12.5 -12.5) to (50 12.5 12.5)
  8 by 2 by 3 MPI processor grid
  reading atoms ...
  1050 atoms
  reading velocities ...
  1050 velocities
  scanning bonds ...
  2 = max bonds/atom
  reading bonds ...
  950 bonds
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     3 = max # of 1-2 neighbors
     4 = max # of 1-3 neighbors
     8 = max # of 1-4 neighbors
    11 = max # of special neighbors
  special bonds CPU = 0.004 seconds
  read_data CPU = 0.014 seconds

pair_style hybrid lj/cut 3.3674 soft 0.3 zero 2
pair_coeff * * zero 2
pair_coeff 1 1 lj/cut 4.14 2 2.2449
pair_coeff 2 2 lj/cut 4.14 0.6 0.67348
pair_coeff 3 3 lj/cut 4.14 0.6 0.67348
pair_coeff 2 3 soft 0 0.3
pair_coeff 1 4 lj/cut 2.613 2.5 2.8062
pair_coeff 4 4 lj/cut 2.613 3 3.3674
pair_modify shift yes
special_bonds lj/coul 0.0 1.0 1.0
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        1        1       
  special bond factors coul:  0        1        1       
     3 = max # of 1-2 neighbors
    11 = max # of special neighbors
  special bonds CPU = 0.001 seconds

bond_style hybrid harmonic fene/expand
bond_coeff 1 fene/expand 0.53549 14.03 0 0 3.0707
bond_coeff 2 harmonic 414 1

neighbor 3.0 multi

region wallx block -30 30 -30 30 -30 30 open 3 open 4 open 5 open 6

group polymer type 1 2 3
1000 atoms in group polymer
group particle type 4
50 atoms in group particle

comm_style tiled
neigh_modify every 1 delay 0 check yes
comm_modify cutoff 20.0

fix 1 all nve
fix 2 all langevin ${temperature} ${temperature} 1 ${seed}
fix 2 all langevin 318 ${temperature} 1 ${seed}
fix 2 all langevin 318 318 1 ${seed}
fix 2 all langevin 318 318 1 100
fix 4 polymer wall/region wallx lj126 4.14 2 2.2449
fix 5 all balance 1000 1.1 rcb

thermo 10000000
timestep 0.01

run 10000000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- neighbor multi command: doi:10.1016/j.cpc.2008.03.005, doi:10.1007/s40571-020-00361-2

@Article{Intveld08,
 author =  {in 't Veld, P. J. and S. J.~Plimpton and G. S. Grest},
 title =   {Accurate and Efficient Methods for Modeling Colloidal
            Mixtures in an Explicit Solvent using Molecular Dynamics},
 journal = {Comput.\ Phys.\ Commut.},
 year =    2008,
 volume =  179,
 pages =   {320--329}
}

@article{Shire2020,
 author = {Shire, Tom and Hanley, Kevin J. and Stratford, Kevin},
 title = {{DEM} Simulations of Polydisperse Media: Efficient Contact
          Detection Applied to Investigate the Quasi-Static Limit},
 journal = {Computational Particle Mechanics},
 year = {2020}
@article{Monti2022,
 author = {Monti, Joseph M. and Clemmer, Joel T. and Srivastava, 
           Ishan and Silbert, Leonardo E. and Grest, Gary S. 
           and Lechman, Jeremy B.},
 title = {Large-scale frictionless jamming with power-law particle 
          size distributions},
 journal = {Phys. Rev. E},
 volume = {106}
 issue = {3}
 year = {2022}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.3674
  ghost atom cutoff = 20
  binsize = 1.65, bins = 61 16 16
  4 neighbor lists, perpetual/occasional/extra = 4 0 0
  (1) pair lj/cut, perpetual, skip from (4)
      attributes: half, newton on
      pair build: skip
      stencil: none
      bin: none
  (2) pair soft, perpetual, skip trim from (4)
      attributes: half, newton on, cut 3.3
      pair build: skip/trim
      stencil: none
      bin: none
  (3) pair zero, perpetual, skip trim from (4)
      attributes: half, newton on, cut 5
      pair build: skip/trim
      stencil: none
      bin: none
  (4) neighbor class addition, perpetual
      attributes: half, newton on
      pair build: half/multi/newton
      stencil: half/multi/3d
      bin: multi
Per MPI rank memory allocation (min/avg/max) = 6.972 | 7.054 | 7.255 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
         0   0              13.065         104.2798       117.3448      -0.0031259878   62500        
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could l
variable A equal "ramp(0,-38.916)"
fix 3 all adapt 1 pair soft a 2 3 v_A

run 40000000
Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
WARNING: Inconsistent image flags (src/src/domain.cpp:815)
Per MPI rank memory allocation (min/avg/max) = 7.156 | 7.252 | 7.304 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
  10000000   308.34731      84.64505       2830.4533      9613.7999      0.0086768987   62500        
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/do
variable A equal "ramp(0,-38.916)"
fix 3 all adapt 1 pair soft a 2 3 v_A

run 40000000
Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
WARNING: Inconsistent image flags (src/src/domain.cpp:815)
WARNING: Bond/angle/dihedral extent > half of periodic box length (src/src/domain.cpp:936)
Per MPI rank memory allocation (min/avg/max) = 7.155 | 7.249 | 7.304 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
  10000000   329.69188      96.565586      2907.4628      10166.431      0.020194708    62500        
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:96
variable A equal "ramp(0,-38.916)"
fix 3 all adapt 1 pair soft a 2 3 v_A

run 40000000
Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
WARNING: Inconsistent image flags (src/src/domain.cpp:815)
WARNING: Bond/angle/dihedral extent > half of periodic box length (src/src/domain.cpp:936)
Per MPI rank memory allocation (min/avg/max) = 7.155 | 7.249 | 7.312 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
  10000000   314.9168       82.638996      2503.1694      9427.2291      0.022689511    62500        
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Proc sub-domain size < neighbor skin, could lead to lost atoms (src/src/domain.cpp:966)
WARNING: Too many warnings: 107 vs 100. All future warnings will be suppressed (src/src/thermo.cpp:475)
  20000000   327.14068      54.469088      2772.5984      9934.0464      0.016169831    62500        
  30000000   306.80044     -9.3063475      2770.2358      9426.0261      0.010900784    62500        
  40000000   319.26602     -1995.4887      2608.1702      7548.5871      0.020621332    62500        
  50000000   313.38227     -11793.518      2862.2972     -2123.1371      0.015530061    62500        
Loop time of 5453.43 on 48 procs for 40000000 steps with 1050 atoms

Performance: 6337292.710 ns/day, 0.000 hours/ns, 7334.830 timesteps/s, 7.702 Matom-step/s
99.6% CPU use with 48 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 19.712     | 23.54      | 26.188     |  24.8 |  0.43
Bond    | 13.598     | 16.414     | 17.983     |  21.1 |  0.30
Neigh   | 93.645     | 108.17     | 124.34     |  98.2 |  1.98
Comm    | 4230.7     | 4493.2     | 4654       | 147.0 | 82.39
Output  | 0.00049547 | 0.00053547 | 0.0010664  |   0.0 |  0.00
Modify  | 224.77     | 229.26     | 260.02     |  36.2 |  4.20
Other   |            | 582.9      |            |       | 10.69

Nlocal:         21.875 ave          24 max          19 min
Histogram: 1 0 5 0 10 0 19 0 9 4
Nghost:         2903.9 ave        3842 max        1991 min
Histogram: 4 4 9 5 3 4 5 5 4 5
Neighs:              0 ave           0 max           0 min
Histogram: 48 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 1.8095238
Neighbor list builds = 739537
Dangerous builds = 0

unfix 3
pair_coeff 2 3 soft -38.916 0.3
run 10000000
Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
Per MPI rank memory allocation (min/avg/max) = 7.16 | 7.264 | 7.325 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
  50000000   313.38227     -11793.518      2862.2972     -2123.1371      0.015530061    62500        
  60000000   319.17309     -12092.272      2770.8206     -2387.565       0.023605709    62500        
Loop time of 1439.27 on 48 procs for 10000000 steps with 1050 atoms

Performance: 6003059.023 ns/day, 0.000 hours/ns, 6947.985 timesteps/s, 7.295 Matom-step/s
99.6% CPU use with 48 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 6.6628     | 8.1814     | 11.191     |  21.2 |  0.57
Bond    | 3.3038     | 3.9788     | 4.4184     |  10.5 |  0.28
Neigh   | 22.263     | 24.905     | 28.546     |  30.8 |  1.73
Comm    | 1170.5     | 1236       | 1283.4     |  70.9 | 85.88
Output  | 4.5987e-05 | 6.2817e-05 | 0.00022713 |   0.0 |  0.00
Modify  | 22.891     | 23.602     | 25.432     |  10.1 |  1.64
Other   |            | 142.6      |            |       |  9.91

Nlocal:         21.875 ave          25 max          19 min
Histogram: 1 10 0 7 0 13 11 0 5 1
Nghost:         3072.1 ave        4211 max        2064 min
Histogram: 3 4 7 4 7 4 13 3 1 2
Neighs:              0 ave           0 max           0 min
Histogram: 48 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 1.8095238
Neighbor list builds = 165574
Dangerous builds = 0
u
unfix 4
fix fixCOM polymer recenter INIT INIT INIT
run 50000000
Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
Per MPI rank memory allocation (min/avg/max) = 7.172 | 7.284 | 7.323 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
  60000000   317.61881     -12124.344      2965.8563     -2258.3671      0.018359005    62500        
  70000000   317.03291     -11298.977      3157.8821     -1253.7026     -0.0016076473   62500        
  80000000   312.87065     -11937.067      3150.2779     -1989.8205     -0.0036230923   62500        
  90000000   327.97957     -12385.702      3169.2604     -2091.2378     -0.0051591031   62500        
 100000000   320.73758     -11631.986      2905.3364     -1758.7746      0.0096420799   62500        
 110000000   319.74361     -12232.68       2853.3753     -2433.0237      0.015429914    62500        
Loop time of 6791.88 on 48 procs for 50000000 steps with 1050 atoms

Performance: 6360533.707 ns/day, 0.000 hours/ns, 7361.729 timesteps/s, 7.730 Matom-step/s
99.6% CPU use with 48 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 32.671     | 39.326     | 53.541     |  45.2 |  0.58
Bond    | 16.822     | 20.004     | 21.946     |  20.6 |  0.29
Neigh   | 107.32     | 123.01     | 140.42     |  92.3 |  1.81
Comm    | 5279.4     | 5628.9     | 5804.8     | 162.5 | 82.88
Output  | 0.00023587 | 0.00027443 | 0.0010299  |   0.0 |  0.00
Modify  | 512.16     | 687.74     | 1032.9     | 471.5 | 10.13
Other   |            | 292.9      |            |       |  4.31

Nlocal:         21.875 ave          24 max          19 min
Histogram: 2 0 4 0 10 0 18 0 10 4
Nghost:        3008.94 ave        3727 max        1532 min
Histogram: 1 1 1 1 6 7 6 10 8 7
Neighs:              0 ave           0 max           0 min
Histogram: 48 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 1.8095238
Neighbor list builds = 835235
Dangerous builds

d
d
dump 4 all xyz 50000 Out_${temperature}/pols_T${temperature}_rep${index}.xyz
dump 4 all xyz 50000 Out_318/pols_T${temperature}_rep${index}.xyz
dump 4 all xyz 50000 Out_318/pols_T318_rep${index}.xyz
dump 4 all xyz 50000 Out_318/pols_T318_rep4.xyz
run 200000000
Generated 0 of 6 mixed pair_coeff terms from geometric mixing rule
Per MPI rank memory allocation (min/avg/max) = 7.193 | 7.306 | 7.348 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press          Volume    
 110000000   319.74361     -12232.68       2853.3753     -2433.0237      0.015429914    62500        
 120000000   322.53273     -12445.332      2954.0018     -2484.457       0.0043557896   62500        
 130000000   320.37783     -11993.964      2775.3055     -2258.5997      0.014113165    62500        
 140000000   320.63202     -12268.452      2942.205      -2360.666      -0.00084438433  62500        
 150000000   313.87095     -12093.3        2918.3286     -2356.2712      0.0030557165   62500        
 160000000   322.39914     -12187.039      2888.0841     -2294.9834      0.022214973    62500        
 170000000   319.98345     -12602.595      3021.3105     -2629.7936      0.017878286    62500        
 180000000   309.96144     -11390.779      3029.4665     -1627.5445      0.0016987706   62500        
 190000000   321.19304     -11892.643      2654.8648     -2260.0092      0.017385009    62500        
 200000000   325.265       -12520.767      2929.4409     -2525.0955      0.010171917    62500        
 210000000   316.23571     -12033.83       3051.7431     -2112.0138     -0.005028061    62500        
 220000000   316.69457     -13287.211      2873.7718     -3533.3975      0.0017016202   62500        
 230000000   327.6837      -12389.065      3049.5926     -2220.6972      0.0094943378   62500        
 240000000   318.9076      -12076.34       3176.0772     -1972.144       0.0019359062   62500        
 250000000   304.95739     -11166.457      2970.1247     -1571.2752     -0.001767014    62500        
 260000000   311.95618     -11967.492      2758.1652     -2432.2246      0.0054500896   62500        
 270000000   317.79697     -11952.638      2981.6827     -2066.9646      0.00095483759  62500        
 280000000   307.93505     -11318.562      2920.2473     -1708.5697      0.0029317656   62500        
 290000000   322.78369     -12476.596      3021.9772     -2442.2938     -0.00034086588  62500        
 300000000   315.22931     -10888.15       2770.6544     -1269.2854      0.013444808    62500        
 310000000   324.56055     -11872.467      2841.6884     -1979.8516      0.006427983    62500        
Loop time of 25530.9 on 48 procs for 200000000 steps with 1050 atoms

Performance: 6768258.180 ns/day, 0.000 hours/ns, 7833.632 timesteps/s, 8.225 Matom-step/s
99.6% CPU use with 48 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 140.53     | 152.52     | 209.51     |  79.7 |  0.60
Bond    | 74.025     | 79.296     | 86.602     |  26.6 |  0.31
Neigh   | 424.85     | 474.21     | 526.75     | 152.1 |  1.86
Comm    | 20027      | 20938      | 21598      | 284.6 | 82.01
Output  | 0.55499    | 0.9408     | 1.3057     |  24.3 |  0.00
Modify  | 2068.4     | 2737.9     | 3622.7     | 803.2 | 10.72
Other   |            | 1148       |            |       |  4.50

Nlocal:         21.875 ave          24 max          19 min
Histogram: 1 0 3 0 16 0 15 0 7 6
Nghost:        2298.83 ave        2977 max        1721 min
Histogram: 4 7 2 4 7 8 9 5 1 1
Neighs:              0 ave           0 max           0 min
Histogram: 48 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 1.8095238
Neighbor list builds = 3357778
Dangerous builds = 0
Total wall time: 11:15:21
:04:38
:09:43
